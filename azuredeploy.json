{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "WebsiteName": {
            "type": "string"
        },
        "JMC_HostingPlanName": {
            "type": "string"
        },
        "JMC_HostingPlanSKU": {
            "type": "string",
           
            "defaultValue": "Standard"
        },
        "JMC_HostingPlanWorkerSize": {
            "type": "string",
           
            "defaultValue": "0"
        },
        "EnableRules": {
            "type": "bool",
            "defaultValue": false
        }      
    },
    "resources": [
      {
        "apiVersion": "2014-04-01",
        "location": "southeastasia",
        "name": "[concat(parameters('WebsiteName'), '-Insights')]",
        "properties": {
          "ApplicationId": "[concat(parameters('WebsiteName'), '-Insights')]"
        },
        "tags": {
          "displayName": "insightsComponents"
        },
        "type": "Microsoft.Insights/components"
      },
        {
            "name": "[concat(parameters('WebsiteName'), '-DevInsights')]",
            "type": "Microsoft.Insights/components",
            "location": "southeastasia",
            "apiVersion": "2014-04-01",
            "tags": {
                "displayName": "insightsComponents"
            },
            "properties": {
                "ApplicationId": "[concat(parameters('WebsiteName'), '-DevInsights')]"
            }
        },
        {
            "name": "[concat(parameters('WebsiteName'), '-StagingInsights')]",
            "type": "Microsoft.Insights/components",
            "location": "southeastasia",
            "apiVersion": "2014-04-01",
            "tags": {
                "displayName": "insightsComponents"
            },
            "properties": {
                "ApplicationId": "[concat(parameters('WebsiteName'), '-StagingInsights')]"
            }
        },
        {
            "name": "[parameters('JMC_HostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "apiVersion": "2014-06-01",
            "dependsOn": [ ],
            "tags": {
                "displayName": "JMCHostingPlan"
            },
            "properties": {
                "name": "[parameters('JMC_HostingPlanName')]",
                "sku": "[parameters('JMC_HostingPlanSKU')]",
                "workerSize": "[parameters('JMC_HostingPlanWorkerSize')]",
                "numberOfWorkers": 1
            }
        },
        {
            "name": "[concat(parameters('JMC_HostingPlanName'), '-', resourceGroup().name)]",
            "type": "Microsoft.Insights/autoscalesettings",
            "location": "Southeast Asia",
            "apiVersion": "2014-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('JMC_HostingPlanName'))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('JMC_HostingPlanName'))]": "Resource",
                "displayName": "WebsiteHostingPlanAutoScale"
            },
            "properties": {
                "name": "[concat(parameters('JMC_HostingPlanName'), '-', resourceGroup().name)]",
                "profiles": [
                    {
                        "name": "Default",
                        "capacity": {
                            "minimum": "1",
                            "maximum": "4",
                            "default": "1"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('JMC_HostingPlanName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 80
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT10M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('JMC_HostingPlanName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT1H",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 60
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1H"
                                }
                            }
                        ]
                    }
                ],
                "enabled": "[parameters('EnableRules')]",
                "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('JMC_HostingPlanName'))]"
            }
        },
        {
            "name": "[concat('CPUHigh ', parameters('JMC_HostingPlanName'))]",
            "type": "Microsoft.Insights/alertrules",
            "location": "Southeast Asia",
            "apiVersion": "2014-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('JMC_HostingPlanName'))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('JMC_HostingPlanName'))]": "Resource",
                "displayName": "WebsiteHostingPlanAlertRuleCPUHigh"
            },
            "properties": {
                "name": "[concat('CPUHigh ', parameters('JMC_HostingPlanName'))]",
                "description": "[concat('The average CPU is high across all the instances of ', parameters('JMC_HostingPlanName'))]",
                "isEnabled": "[parameters('EnableRules')]",
                "condition": {
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('JMC_HostingPlanName'))]",
                        "metricName": "CpuPercentage"
                    },
                    "operator": "GreaterThan",
                    "threshold": 90,
                    "windowSize": "PT15M"
                },
                "action": {
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": [ ]
                }
            }
        },
      {
        "apiVersion": "2014-04-01",
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', parameters('JMC_HostingPlanName'))]"
        ],
        "location": "Southeast Asia",
        "name": "[concat('LongHttpQueue ', parameters('JMC_HostingPlanName'))]",
        "properties": {
          "name": "[concat('LongHttpQueue ', parameters('JMC_HostingPlanName'))]",
          "description": "[concat('The HTTP queue for the instances of ', parameters('JMC_HostingPlanName'), ' has a large number of pending requests.')]",
          "isEnabled": "[parameters('EnableRules')]",
          "condition": {
            "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
            "dataSource": {
              "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
              "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('JMC_HostingPlanName'))]",
              "metricName": "HttpQueueLength"
            },
            "operator": "GreaterThan",
            "threshold": 100,
            "windowSize": "PT5M"
          },
          "action": {
            "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
            "sendToServiceOwners": true,
            "customEmails": []
          }
        },
        "tags": {
          "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('JMC_HostingPlanName'))]": "Resource",
          "displayName": "WebsiteHostingPlanAlertRuleLongHttpQueue"
        },
        "type": "Microsoft.Insights/alertrules"
      },
      {
        "apiVersion": "2014-06-01",
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', parameters('JMC_HostingPlanName'))]",
          "[resourceId('Microsoft.Insights/components', concat(parameters('WebsiteName'), '-Insights'))]",
          "[resourceId('Microsoft.Insights/components', concat(parameters('WebSiteName'), '-DevInsights'))]",
          "[resourceId('Microsoft.Insights/components', concat(parameters('WebSiteName'), '-StagingInsights'))]"
        ],
        "location": "[resourceGroup().location]",
        "name": "[parameters('WebSiteName')]",
        "properties": {
          "name": "[parameters('WebsiteName')]",
          "serverFarm": "[parameters('JMC_HostingPlanName')]"
        },
        "resources": [
          {
            "name": "appsettings",
            "type": "config",
            "apiVersion": "2014-11-01",
            "dependsOn": [
              "[resourceId('Microsoft.Web/sites', parameters('WebSiteName'))]"
            ],
            "properties": {
              "Keys:ApplicationInsights:InstrumentationKey": "[reference(concat('Microsoft.Insights/components/', parameters('WebsiteName'), '-Insights')).InstrumentationKey]"
            }
          },
          {
            "name": "slotconfignames",
            "type": "config",
            "apiVersion": "2014-11-01",
            "dependsOn": [
              "[resourceId('Microsoft.Web/sites', parameters('WebSiteName'))]"
            ],
            "properties": {
              "connectionStringNames": [ "DefaultConnectionString" ],
              "appSettingNames": [ "keys:ApplicationInsights:InstrumentationKey" ]
            }
          },
          {
            "name": "Dev",
            "type": "slots",
            "location": "[resourceGroup().location]",
            "apiVersion": "2014-11-01",
            "dependsOn": [
              "[resourceId('Microsoft.Web/sites', parameters('WebSiteName'))]"
            ],
            "properties": {
            },
            "resources": [
              {
                "name": "appsettings",
                "type": "config",
                "apiVersion": "2014-11-01",
                "dependsOn": [
                  "[resourceId('Microsoft.Web/sites/slots', parameters('WebSiteName'), 'Dev')]"
                ],
                "properties": {
                  "Keys:ApplicationInsights:InstrumentationKey": "[reference(concat('Microsoft.Insights/components/', parameters('WebsiteName'), '-DevInsights')).InstrumentationKey]"
                }
              }
            ]
          },
          {
            "name": "Staging",
            "type": "slots",
            "location": "[resourceGroup().location]",
            "apiVersion": "2014-11-01",
            "dependsOn": [
              "[resourceId('Microsoft.Web/sites', parameters('WebSiteName'))]"
            ],
            "properties": {
            },
            "resources": [
              {
                "name": "appsettings",
                "type": "config",
                "apiVersion": "2014-11-01",
                "dependsOn": [
                  "[resourceId('Microsoft.Web/sites/slots', parameters('WebSiteName'), 'Staging')]"
                ],
                "properties": {
                  "Keys:ApplicationInsights:InstrumentationKey": "[reference(concat('Microsoft.Insights/components/', parameters('WebsiteName'), '-StagingInsights')).InstrumentationKey]"
                }
              }
            ]
          }
        ],
        "tags": {
          "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('JMC_HostingPlanName'))]": "Resource",
          "displayName": "JMCWebsite"
        },
        "type": "Microsoft.Web/sites"
      },
      {
        "apiVersion": "2014-04-01",
        "dependsOn": [
          "[resourceId('Microsoft.Web/sites', parameters('WebSiteName'))]"
        ],
        "location": "East US",
        "name": "[concat('ServerErrors ', parameters('WebsiteName'))]",
        "properties": {
          "name": "[concat('ServerErrors ', parameters('WebsiteName'))]",
          "description": "[concat(parameters('WebsiteName'), ' has some server errors, status code 5xx.')]",
          "isEnabled": "[parameters('EnableRules')]",
          "condition": {
            "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
            "dataSource": {
              "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
              "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('WebsiteName'))]",
              "metricName": "Http5xx"
            },
            "operator": "GreaterThan",
            "threshold": 0,
            "windowSize": "PT5M"
          },
          "action": {
            "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
            "sendToServiceOwners": true,
            "customEmails": []
          }
        },
        "tags": {
          "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('WebsiteName'))]": "Resource",
          "displayName": "WebsiteAlertRuleServerErrors"
        },
        "type": "Microsoft.Insights/alertrules"
      },
        {
            "name": "[concat('ForbiddenRequests ', parameters('WebsiteName'))]",
            "type": "Microsoft.Insights/alertrules",
            "location": "Southeast Asia",
            "apiVersion": "2014-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('WebsiteName'))]"
            ],
            "tags": {
                "displayName": "WebsiteAlertRuleForbiddenRequests"
            },
            "properties": {
                "name": "[concat('ForbiddenRequests ', parameters('WebsiteName'))]",
                "description": "[concat(parameters('WebsiteName'), ' has some requests that are forbidden, status code 403.')]",
                "isEnabled": "[parameters('EnableRules')]",
              "condition": {
                "dataSource": {
                  "metricName": "Http403",
                  "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
                  "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('WebsiteName'))]"
                },
                "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
                "operator": "GreaterThan",
                "threshold": 0,
                "windowSize": "PT5M"
              },
                "action": {
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": [ ]
                }
            }
        }
    ]
}